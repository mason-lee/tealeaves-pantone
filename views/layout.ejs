<!DOCTYPE html>
<html>
	<head>
		<title>New Sails App</title>

		<!-- Viewport mobile tag for sensible mobile support -->
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<meta charset="utf-8"/>
		<link href='http://fonts.googleapis.com/css?family=Libre+Baskerville:400,700,400italic' rel='stylesheet' type='text/css'>
		<link rel="stylesheet" href="/styles/fonts/webfontkit-adobe-garamond/specimen_files/grid_12-825-55-15.css">
		<link rel="stylesheet" href="/styles/fonts/webfontkit-adobe-garamond/specimen_files/specimen_stylesheet.css">
		<link rel="stylesheet" href="/styles/fonts/webfontkit-adobe-garamond/stylesheet.css">
		<link rel="stylesheet" href="/styles/fonts/webfontkit-univers/specimen_files/grid_12-825-55-15.css">
		<link rel="stylesheet" href="/styles/fonts/webfontkit-univers/specimen_files/specimen_stylesheet.css">
		<link rel="stylesheet" href="/styles/fonts/webfontkit-univers/stylesheet.css">
		<!--  
				Stylesheets and Preprocessors
				==============================

				You can always bring in CSS files manually with `<link>` tags, or asynchronously
				using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
				of Sails' conventional asset pipeline (boilerplate Gruntfile).

				By default, stylesheets from your `assets/styles` folder are included
				here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
				are supported. In production, your styles will be minified and concatenated into
				a single file.
				
				To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
				For example, here are a few things you could do:
						
						+ Change the order of your CSS files
						+ Import stylesheets from other directories
						+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
		-->

		<!--STYLES-->
<link rel="stylesheet" href="/styles/animate.css">
<link rel="stylesheet" href="/styles/bootstrap/bootstrap-theme.min.css">
<link rel="stylesheet" href="/styles/bootstrap/bootstrap.min.css">
<link rel="stylesheet" href="/styles/fonts/webfontkit-adobe-garamond/specimen_files/grid_12-825-55-15.css">
<link rel="stylesheet" href="/styles/fonts/webfontkit-adobe-garamond/specimen_files/specimen_stylesheet.css">
<link rel="stylesheet" href="/styles/fonts/webfontkit-adobe-garamond/stylesheet.css">
<link rel="stylesheet" href="/styles/fonts/webfontkit-univers/specimen_files/grid_12-825-55-15.css">
<link rel="stylesheet" href="/styles/fonts/webfontkit-univers/specimen_files/specimen_stylesheet.css">
<link rel="stylesheet" href="/styles/fonts/webfontkit-univers/stylesheet.css">
<link rel="stylesheet" href="/styles/style.css">
<link rel="stylesheet" href="/styles/webfontkit-adobe-garamond/specimen_files/grid_12-825-55-15.css">
<link rel="stylesheet" href="/styles/webfontkit-adobe-garamond/specimen_files/specimen_stylesheet.css">
<link rel="stylesheet" href="/styles/webfontkit-adobe-garamond/stylesheet.css">
<link rel="stylesheet" href="/styles/webfontkit-univers/specimen_files/grid_12-825-55-15.css">
<link rel="stylesheet" href="/styles/webfontkit-univers/specimen_files/specimen_stylesheet.css">
<link rel="stylesheet" href="/styles/webfontkit-univers/stylesheet.css">
<!--STYLES END-->
	</head>

	<body>
		<div class="pull-right weather-wrapper">
			<span class="weather">
				<img src="images/SVG/uniE604.svg" alt="">
				<span class="temperature">7&deg;</span>
			</span><br>
			<span>Surrey, BC</span>
		</div>
		<%- body %>
		



		<!--
				Client-side Templates
				========================

				HTML templates are important prerequisites of modern, rich client applications.
				To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
				that you load these templates client-side.

				By default, your Gruntfile is configured to automatically load and precompile
				client-side JST templates in your `assets/templates` folder, then
				include them here automatically (between TEMPLATES and TEMPLATES END).
				
				To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
				For example, here are a few things you could do:

						+ Import templates from other directories
						+ Use a different template engine (handlebars, jade, dust, etc.)
						+ Internationalize your client-side templates using a server-side
							stringfile before they're served.
		-->

		<!--TEMPLATES-->

<!--TEMPLATES END-->


		<!--

			Client-side Javascript
			========================

			You can always bring in JS files manually with `script` tags, or asynchronously
			on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
			take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

			By default, files in your `assets/js` folder are included here
			automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
			CoffeeScript (.coffee) are supported. In production, your scripts will be minified
			and concatenated into a single file.
			
			To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
			For example, here are a few things you could do:
					
					+ Change the order of your scripts
					+ Import scripts from other directories
					+ Use a different preprocessor, like TypeScript

		-->

		<!--SCRIPTS-->
<script src="/js/dependencies/sails.io.js"></script>
<script src="/js/dependencies/jquery.min.js"></script>
<script src="/js/dependencies/jquery.scrollTo.js"></script>
<script src="/js/dependencies/jquery.scrollmagic.js"></script>
<script src="/js/dependencies/bootstrap/bootstrap.min.js"></script>
<script src="/js/dependencies/isotope.pkgd.min.js"></script>
<script src="/js/dependencies/jquery.easing.js"></script>
<script src="/js/dependencies/jquery.scrollto.js"></script>
<script src="/js/dependencies/tracking-min.js"></script>
<script src="/js/lib/app-utils.js"></script>
<script src="/js/lib/media.js"></script>
<script src="/js/lib/webcam.min.js"></script>
<script src="/js/camera.js"></script>
<script src="/js/main.js"></script>
<script src="/js/story.js"></script>
<!--SCRIPTS END-->
	</body>
</html>
